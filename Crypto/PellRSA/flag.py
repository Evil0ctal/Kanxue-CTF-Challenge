from Crypto.Util.number import long_to_bytes, inverse
import sympy

# 给定的数值
D = 0x1337
c = 3005210900274062028245064763681985171865732477888576575723787090796927451576980061053851866237955581217514145765632113368490115032450199985758227732632048361191007646408276913089831906329971437230559530448171301727266374997545370123383402726558627115715475862029561278423823518444820977264751303044302265493708799121168143462311965945091467240934532001260635332451496021570344953585558566967953242376305314361254897583062914601586502797581537297696760063459202795730665696764263768365841709190449166538288878080889669665026312901303009296451551464554389754163788816398944455459009524861984572615424670639254030151054
n = 15718757517521251374958179320446142283106866234677555962716669310992898890185071974665307763506272733881181355624859739900598443787336490077978994566789053663418590696159044391330241067187081512182824631894647418510875405615745967831095900926071879310908555025126167350062806600612989286959517901360623166342258230751843299825036857599702420000410748900477339859195343125679909303239140523015164436167732911014179093209512745136065705348000005927264077855404829601870427156494640300513831498305781704787224695635843906200844830814368296185775476464094439535093160507307060825299000779102353898638521855718963250126411
hint = 25554225946418820739932963199267565143249197331792582934680530259781352338033809894486636299663276720660161274600116944243562621815071872332713982731906833226185925332402882590577780931343494988584492568662132160373007142250538311414299314391751747130332966573464023483628487169137147382668830758422851921134062566813674606680584569364070329996014784761466853704469300230627289640396078029124024721492689780252172435786800400687554721418435802505512555196774950296179670031042084572223128748401
e = 0x10001

# 1. 求解Pell's Equation，找到x和y
def pell_solve(D):
    x, y = sympy.symbols('x y')
    eq = x**2 - D*y**2 - 1
    sols = sympy.diophantine(eq)
    for sol in sols:
        return sol

sol = pell_solve(D)
x, y = sol

print(f"x = {x}, y = {y}")

# 2. 根据hint, x, y, 求解p和q
# hint = x*p + y*q
# hint - x*p = y*q
# (hint - x*p) / y = q
# hint是已知的，x和y已知，p, q满足n = p*q

p = q = None

for k in range(1, 1000000):
    possible_p = (hint + k * n) // (x + y)
    if n % possible_p == 0:
        p = possible_p
        q = n // p
        print(f"Found p: {p}")
        print(f"Found q: {q}")
        break

if p is None or q is None:
    raise ValueError("Failed to factorize n using the provided hint and Pell's equation solution.")

# 3. 解密RSA
phi = (p - 1) * (q - 1)
d = inverse(e, phi)
m = pow(c, d, n)
flag = long_to_bytes(m)
print(flag.decode())
